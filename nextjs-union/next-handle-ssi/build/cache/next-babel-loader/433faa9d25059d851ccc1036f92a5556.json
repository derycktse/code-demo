{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nexports.__esModule = true;\nexports.addBasePath = addBasePath;\nexports.delBasePath = delBasePath;\nexports[\"default\"] = void 0;\nvar _url2 = require(\"url\");\nvar _mitt = _interopRequireDefault(require(\"../mitt\"));\nvar _utils = require(\"../utils\");\nvar _isDynamic = require(\"./utils/is-dynamic\");\nvar _routeMatcher = require(\"./utils/route-matcher\");\nvar _routeRegex = require(\"./utils/route-regex\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n} /* global __NEXT_DATA__ */ // tslint:disable:no-console\nvar basePath = process.env.__NEXT_ROUTER_BASEPATH || '';\nfunction addBasePath(path) {\n  return path.indexOf(basePath) !== 0 ? basePath + path : path;\n}\nfunction delBasePath(path) {\n  return path.indexOf(basePath) === 0 ? path.substr(basePath.length) || '/' : path;\n}\nfunction toRoute(path) {\n  return path.replace(/\\/$/, '') || '/';\n}\nvar prepareRoute = function prepareRoute(path) {\n  return toRoute(!path || path === '/' ? '/index' : path);\n};\nfunction fetchNextData(pathname, query, isServerRender, cb) {\n  var attempts = isServerRender ? 3 : 1;\n  function getResponse() {\n    return fetch((0, _utils.formatWithValidation)({\n      pathname: addBasePath( // @ts-ignore __NEXT_DATA__\n      \"/_next/data/\".concat(__NEXT_DATA__.buildId).concat(delBasePath(pathname), \".json\")),\n      query: query\n    }), {\n      // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n      // Cookies may also be required for `getServerSideProps`.\n      //\n      // > `fetch` won’t send cookies, unless you set the credentials init\n      // > option.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n      //\n      // > For maximum browser compatibility when it comes to sending &\n      // > receiving cookies, always supply the `credentials: 'same-origin'`\n      // > option instead of relying on the default.\n      // https://github.com/github/fetch#caveats\n      credentials: 'same-origin'\n    }).then(function (res) {\n      if (!res.ok) {\n        if (--attempts > 0 && res.status >= 500) {\n          return getResponse();\n        }\n        throw new Error(\"Failed to load static props\");\n      }\n      return res.json();\n    });\n  }\n  return getResponse().then(function (data) {\n    return cb ? cb(data) : data;\n  })[\"catch\"](function (err) {\n    // We should only trigger a server-side transition if this was caused\n    // on a client-side transition. Otherwise, we'd get into an infinite\n    // loop.\n    if (!isServerRender) {\n      ;\n      err.code = 'PAGE_LOAD_ERROR';\n    }\n    throw err;\n  });\n}\nvar Router = /*#__PURE__*/function () {\n  /**\n  * Map of all components loaded in `Router`\n  */ // Static Data Cache\n  function Router(_pathname, _query, _as2, _ref) {\n    var _this = this;\n    var initialProps = _ref.initialProps,\n      pageLoader = _ref.pageLoader,\n      App = _ref.App,\n      wrapApp = _ref.wrapApp,\n      Component = _ref.Component,\n      err = _ref.err,\n      subscription = _ref.subscription,\n      isFallback = _ref.isFallback;\n    _classCallCheck(this, Router);\n    this.route = void 0;\n    this.pathname = void 0;\n    this.query = void 0;\n    this.asPath = void 0;\n    this.basePath = void 0;\n    this.components = void 0;\n    this.sdc = {};\n    this.sub = void 0;\n    this.clc = void 0;\n    this.pageLoader = void 0;\n    this._bps = void 0;\n    this.events = void 0;\n    this._wrapApp = void 0;\n    this.isSsr = void 0;\n    this.isFallback = void 0;\n    this.onPopState = function (e) {\n      if (!e.state) {\n        // We get state as undefined for two reasons.\n        //  1. With older safari (< 8) and older chrome (< 34)\n        //  2. When the URL changed with #\n        //\n        // In the both cases, we don't need to proceed and change the route.\n        // (as it's already changed)\n        // But we can simply replace the state with the new changes.\n        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n        // So, doing the following for (1) does no harm.\n        var pathname = _this.pathname,\n          query = _this.query;\n        _this.changeState('replaceState', (0, _utils.formatWithValidation)({\n          pathname: pathname,\n          query: query\n        }), (0, _utils.getURL)());\n        return;\n      } // Make sure we don't re-render on initial load,\n      // can be caused by navigating back from an external site\n      if (e.state && _this.isSsr && e.state.as === _this.asPath && (0, _url2.parse)(e.state.url).pathname === _this.pathname) {\n        return;\n      } // If the downstream application returns falsy, return.\n      // They will then be responsible for handling the event.\n      if (_this._bps && !_this._bps(e.state)) {\n        return;\n      }\n      var _e$state = e.state,\n        url = _e$state.url,\n        as = _e$state.as,\n        options = _e$state.options;\n      if (false) {\n        if (typeof url === 'undefined' || typeof as === 'undefined') {\n          console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n        }\n      }\n      _this.replace(url, as, options);\n    };\n    this._getStaticData = function (asPath) {\n      var pathname = prepareRoute((0, _url2.parse)(asPath).pathname);\n      return true && _this.sdc[pathname] ? Promise.resolve(_this.sdc[pathname]) : fetchNextData(pathname, null, _this.isSsr, function (data) {\n        return _this.sdc[pathname] = data;\n      });\n    };\n    this._getServerData = function (asPath) {\n      var _ref2 = (0, _url2.parse)(asPath, true),\n        pathname = _ref2.pathname,\n        query = _ref2.query;\n      pathname = prepareRoute(pathname);\n      return fetchNextData(pathname, query, _this.isSsr);\n    }; // represents the current component key\n    this.route = toRoute(_pathname); // set up the component cache (by route keys)\n    this.components = {}; // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n    if (_pathname !== '/_error') {\n      this.components[this.route] = {\n        Component: Component,\n        props: initialProps,\n        err: err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP\n      };\n    }\n    this.components['/_app'] = {\n      Component: App\n    }; // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    this.events = Router.events;\n    this.pageLoader = pageLoader;\n    this.pathname = _pathname;\n    this.query = _query; // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n    this.asPath =\n    // @ts-ignore this is temporarily global (attached to window)\n    (0, _isDynamic.isDynamicRoute)(_pathname) && __NEXT_DATA__.autoExport ? _pathname : _as2;\n    this.basePath = basePath;\n    this.sub = subscription;\n    this.clc = null;\n    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating\n    // back from external site\n    this.isSsr = true;\n    this.isFallback = isFallback;\n    if (true) {\n      // make sure \"as\" doesn't start with double slashes or else it can\n      // throw an error as it's considered invalid\n      if (_as2.substr(0, 2) !== '//') {\n        // in order for `e.state` to work on the `onpopstate` event\n        // we have to register the initial route upon initialization\n        this.changeState('replaceState', (0, _utils.formatWithValidation)({\n          pathname: _pathname,\n          query: _query\n        }), _as2);\n      }\n      window.addEventListener('popstate', this.onPopState);\n    }\n  } // @deprecated backwards compatibility even though it's a private method.\n  _createClass(Router, [{\n    key: \"update\",\n    value: function update(route, mod) {\n      var Component = mod[\"default\"] || mod;\n      var data = this.components[route];\n      if (!data) {\n        throw new Error(\"Cannot update unavailable route: \".concat(route));\n      }\n      var newData = Object.assign({}, data, {\n        Component: Component,\n        __N_SSG: mod.__N_SSG,\n        __N_SSP: mod.__N_SSP\n      });\n      this.components[route] = newData; // pages/_app.js updated\n      if (route === '/_app') {\n        this.notify(this.components[this.route]);\n        return;\n      }\n      if (route === this.route) {\n        this.notify(newData);\n      }\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      window.location.reload();\n    } /**\n      * Go back in history\n      */\n  }, {\n    key: \"back\",\n    value: function back() {\n      window.history.back();\n    } /**\n      * Performs a `pushState` with arguments\n      * @param url of the route\n      * @param as masks `url` for the browser\n      * @param options object you can define `shallow` and other options\n      */\n  }, {\n    key: \"push\",\n    value: function push(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.change('pushState', url, as, options);\n    } /**\n      * Performs a `replaceState` with arguments\n      * @param url of the route\n      * @param as masks `url` for the browser\n      * @param options object you can define `shallow` and other options\n      */\n  }, {\n    key: \"replace\",\n    value: function replace(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.change('replaceState', url, as, options);\n    }\n  }, {\n    key: \"change\",\n    value: function change(method, _url, _as, options) {\n      var _this2 = this;\n      return new Promise(function (resolve, reject) {\n        if (!options._h) {\n          _this2.isSsr = false;\n        } // marking route changes as a navigation start entry\n        if (_utils.ST) {\n          performance.mark('routeChange');\n        } // If url and as provided as an object representation,\n        // we'll format them into the string version here.\n        var url = typeof _url === 'object' ? (0, _utils.formatWithValidation)(_url) : _url;\n        var as = typeof _as === 'object' ? (0, _utils.formatWithValidation)(_as) : _as;\n        url = addBasePath(url);\n        as = addBasePath(as); // Add the ending slash to the paths. So, we can serve the\n        // \"<page>/index.html\" directly for the SSR page.\n        if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n          var rewriteUrlForNextExport = require('./rewrite-url-for-export').rewriteUrlForNextExport; // @ts-ignore this is temporarily global (attached to window)\n          if (__NEXT_DATA__.nextExport) {\n            as = rewriteUrlForNextExport(as);\n          }\n        }\n        _this2.abortComponentLoad(as); // If the url change is only related to a hash change\n        // We should not proceed. We should only change the state.\n        // WARNING: `_h` is an internal option for handing Next.js client-side\n        // hydration. Your app should _never_ use this property. It may change at\n        // any time without notice.\n        if (!options._h && _this2.onlyAHashChange(as)) {\n          _this2.asPath = as;\n          Router.events.emit('hashChangeStart', as);\n          _this2.changeState(method, url, as, options);\n          _this2.scrollToHash(as);\n          Router.events.emit('hashChangeComplete', as);\n          return resolve(true);\n        }\n        var _ref3 = (0, _url2.parse)(url, true),\n          pathname = _ref3.pathname,\n          query = _ref3.query,\n          protocol = _ref3.protocol;\n        if (!pathname || protocol) {\n          if (false) {\n            throw new Error(\"Invalid href passed to router: \".concat(url, \" https://err.sh/zeit/next.js/invalid-href-passed\"));\n          }\n          return resolve(false);\n        } // If asked to change the current URL we should reload the current page\n        // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n        // We also need to set the method = replaceState always\n        // as this should not go into the history (That's how browsers work)\n        // We should compare the new asPath to the current asPath, not the url\n        if (!_this2.urlIsNew(as)) {\n          method = 'replaceState';\n        }\n        var route = toRoute(pathname);\n        var _options$shallow = options.shallow,\n          shallow = _options$shallow === void 0 ? false : _options$shallow;\n        if ((0, _isDynamic.isDynamicRoute)(route)) {\n          var _ref4 = (0, _url2.parse)(as),\n            asPathname = _ref4.pathname;\n          var routeRegex = (0, _routeRegex.getRouteRegex)(route);\n          var routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);\n          if (!routeMatch) {\n            var missingParams = Object.keys(routeRegex.groups).filter(function (param) {\n              return !query[param];\n            });\n            if (missingParams.length > 0) {\n              if (false) {\n                console.warn(\"Mismatching `as` and `href` failed to manually provide \" + \"the params: \".concat(missingParams.join(', '), \" in the `href`'s `query`\"));\n              }\n              return reject(new Error(\"The provided `as` value (\".concat(asPathname, \") is incompatible with the `href` value (\").concat(route, \"). \") + \"Read more: https://err.sh/zeit/next.js/incompatible-href-as\"));\n            }\n          } else {\n            // Merge params into `query`, overwriting any specified in search\n            Object.assign(query, routeMatch);\n          }\n        }\n        Router.events.emit('routeChangeStart', as); // If shallow is true and the route exists in the router cache we reuse the previous result\n        _this2.getRouteInfo(route, pathname, query, as, shallow).then(function (routeInfo) {\n          var error = routeInfo.error;\n          if (error && error.cancelled) {\n            return resolve(false);\n          }\n          Router.events.emit('beforeHistoryChange', as);\n          _this2.changeState(method, url, as, options);\n          if (false) {\n            var appComp = _this2.components['/_app'].Component;\n            window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;\n          }\n          _this2.set(route, pathname, query, as, routeInfo);\n          if (error) {\n            Router.events.emit('routeChangeError', error, as);\n            throw error;\n          }\n          Router.events.emit('routeChangeComplete', as);\n          return resolve(true);\n        }, reject);\n      });\n    }\n  }, {\n    key: \"changeState\",\n    value: function changeState(method, url, as) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (false) {\n        if (typeof window.history === 'undefined') {\n          console.error(\"Warning: window.history is not available.\");\n          return;\n        }\n        if (typeof window.history[method] === 'undefined') {\n          console.error(\"Warning: window.history.\".concat(method, \" is not available\"));\n          return;\n        }\n      }\n      if (method !== 'pushState' || (0, _utils.getURL)() !== as) {\n        window.history[method]({\n          url: url,\n          as: as,\n          options: options\n        },\n        // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n        '', as);\n      }\n    }\n  }, {\n    key: \"getRouteInfo\",\n    value: function getRouteInfo(route, pathname, query, as) {\n      var _this3 = this;\n      var shallow = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var cachedRouteInfo = this.components[route]; // If there is a shallow route transition possible\n      // If the route is already rendered on the screen.\n      if (shallow && cachedRouteInfo && this.route === route) {\n        return Promise.resolve(cachedRouteInfo);\n      }\n      var handleError = function handleError(err, loadErrorFail) {\n        return new Promise(function (resolve) {\n          if (err.code === 'PAGE_LOAD_ERROR' || loadErrorFail) {\n            // If we can't load the page it could be one of following reasons\n            //  1. Page doesn't exists\n            //  2. Page does exist in a different zone\n            //  3. Internal error while loading the page\n            // So, doing a hard reload is the proper way to deal with this.\n            window.location.href = as; // Changing the URL doesn't block executing the current code path.\n            // So, we need to mark it as a cancelled error and stop the routing logic.\n            err.cancelled = true; // @ts-ignore TODO: fix the control flow here\n            return resolve({\n              error: err\n            });\n          }\n          if (err.cancelled) {\n            // @ts-ignore TODO: fix the control flow here\n            return resolve({\n              error: err\n            });\n          }\n          resolve(_this3.fetchComponent('/_error').then(function (res) {\n            var Component = res.page;\n            var routeInfo = {\n              Component: Component,\n              err: err\n            };\n            return new Promise(function (resolve) {\n              _this3.getInitialProps(Component, {\n                err: err,\n                pathname: pathname,\n                query: query\n              }).then(function (props) {\n                routeInfo.props = props;\n                routeInfo.error = err;\n                resolve(routeInfo);\n              }, function (gipErr) {\n                console.error('Error in error page `getInitialProps`: ', gipErr);\n                routeInfo.error = err;\n                routeInfo.props = {};\n                resolve(routeInfo);\n              });\n            });\n          })[\"catch\"](function (err) {\n            return handleError(err, true);\n          }));\n        });\n      };\n      return new Promise(function (resolve, reject) {\n        if (cachedRouteInfo) {\n          return resolve(cachedRouteInfo);\n        }\n        _this3.fetchComponent(route).then(function (res) {\n          return resolve({\n            Component: res.page,\n            __N_SSG: res.mod.__N_SSG,\n            __N_SSP: res.mod.__N_SSP\n          });\n        }, reject);\n      }).then(function (routeInfo) {\n        var Component = routeInfo.Component,\n          __N_SSG = routeInfo.__N_SSG,\n          __N_SSP = routeInfo.__N_SSP;\n        if (false) {\n          var _require = require('react-is'),\n            isValidElementType = _require.isValidElementType;\n          if (!isValidElementType(Component)) {\n            throw new Error(\"The default export is not a React Component in page: \\\"\".concat(pathname, \"\\\"\"));\n          }\n        }\n        return _this3._getData(function () {\n          return __N_SSG ? _this3._getStaticData(as) : __N_SSP ? _this3._getServerData(as) : _this3.getInitialProps(Component,\n          // we provide AppTree later so this needs to be `any`\n          {\n            pathname: pathname,\n            query: query,\n            asPath: as\n          });\n        }).then(function (props) {\n          routeInfo.props = props;\n          _this3.components[route] = routeInfo;\n          return routeInfo;\n        });\n      })[\"catch\"](handleError);\n    }\n  }, {\n    key: \"set\",\n    value: function set(route, pathname, query, as, data) {\n      this.isFallback = false;\n      this.route = route;\n      this.pathname = pathname;\n      this.query = query;\n      this.asPath = as;\n      this.notify(data);\n    } /**\n      * Callback to execute before replacing router state\n      * @param cb callback to be executed\n      */\n  }, {\n    key: \"beforePopState\",\n    value: function beforePopState(cb) {\n      this._bps = cb;\n    }\n  }, {\n    key: \"onlyAHashChange\",\n    value: function onlyAHashChange(as) {\n      if (!this.asPath) return false;\n      var _this$asPath$split = this.asPath.split('#'),\n        _this$asPath$split2 = _slicedToArray(_this$asPath$split, 2),\n        oldUrlNoHash = _this$asPath$split2[0],\n        oldHash = _this$asPath$split2[1];\n      var _as$split = as.split('#'),\n        _as$split2 = _slicedToArray(_as$split, 2),\n        newUrlNoHash = _as$split2[0],\n        newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same\n      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n        return true;\n      } // If the urls are change, there's more than a hash change\n      if (oldUrlNoHash !== newUrlNoHash) {\n        return false;\n      } // If the hash has changed, then it's a hash only change.\n      // This check is necessary to handle both the enter and\n      // leave hash === '' cases. The identity case falls through\n      // and is treated as a next reload.\n      return oldHash !== newHash;\n    }\n  }, {\n    key: \"scrollToHash\",\n    value: function scrollToHash(as) {\n      var _as$split3 = as.split('#'),\n        _as$split4 = _slicedToArray(_as$split3, 2),\n        hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value\n      if (hash === '') {\n        window.scrollTo(0, 0);\n        return;\n      } // First we check if the element by id is found\n      var idEl = document.getElementById(hash);\n      if (idEl) {\n        idEl.scrollIntoView();\n        return;\n      } // If there's no element with the id, we check the `name` property\n      // To mirror browsers\n      var nameEl = document.getElementsByName(hash)[0];\n      if (nameEl) {\n        nameEl.scrollIntoView();\n      }\n    }\n  }, {\n    key: \"urlIsNew\",\n    value: function urlIsNew(asPath) {\n      return this.asPath !== asPath;\n    } /**\n      * Prefetch page code, you may wait for the data during page rendering.\n      * This feature only works in production!\n      * @param url the href of prefetched page\n      * @param asPath the as path of the prefetched page\n      */\n  }, {\n    key: \"prefetch\",\n    value: function prefetch(url) {\n      var _this4 = this;\n      var asPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return new Promise(function (resolve, reject) {\n        var _ref5 = (0, _url2.parse)(url),\n          pathname = _ref5.pathname,\n          protocol = _ref5.protocol;\n        if (!pathname || protocol) {\n          if (false) {\n            throw new Error(\"Invalid href passed to router: \".concat(url, \" https://err.sh/zeit/next.js/invalid-href-passed\"));\n          }\n          return;\n        } // Prefetch is not supported in development mode because it would trigger on-demand-entries\n        if (false) {\n          return;\n        }\n        var route = delBasePath(toRoute(pathname));\n        Promise.all([_this4.pageLoader.prefetchData(url, delBasePath(asPath)), _this4.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]).then(function () {\n          return resolve();\n        }, reject);\n      });\n    }\n  }, {\n    key: \"fetchComponent\",\n    value: function () {\n      var _fetchComponent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(route) {\n        var cancelled, cancel, componentResult, error;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                cancelled = false;\n                cancel = this.clc = function () {\n                  cancelled = true;\n                };\n                route = delBasePath(route);\n                _context.next = 5;\n                return this.pageLoader.loadPage(route);\n              case 5:\n                componentResult = _context.sent;\n                if (!cancelled) {\n                  _context.next = 10;\n                  break;\n                }\n                error = new Error(\"Abort fetching component for route: \\\"\".concat(route, \"\\\"\"));\n                error.cancelled = true;\n                throw error;\n              case 10:\n                if (cancel === this.clc) {\n                  this.clc = null;\n                }\n                return _context.abrupt(\"return\", componentResult);\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function fetchComponent(_x) {\n        return _fetchComponent.apply(this, arguments);\n      }\n      return fetchComponent;\n    }()\n  }, {\n    key: \"_getData\",\n    value: function _getData(fn) {\n      var _this5 = this;\n      var cancelled = false;\n      var cancel = function cancel() {\n        cancelled = true;\n      };\n      this.clc = cancel;\n      return fn().then(function (data) {\n        if (cancel === _this5.clc) {\n          _this5.clc = null;\n        }\n        if (cancelled) {\n          var err = new Error('Loading initial props cancelled');\n          err.cancelled = true;\n          throw err;\n        }\n        return data;\n      });\n    }\n  }, {\n    key: \"getInitialProps\",\n    value: function getInitialProps(Component, ctx) {\n      var App = this.components['/_app'].Component;\n      var AppTree = this._wrapApp(App);\n      ctx.AppTree = AppTree;\n      return (0, _utils.loadGetInitialProps)(App, {\n        AppTree: AppTree,\n        Component: Component,\n        router: this,\n        ctx: ctx\n      });\n    }\n  }, {\n    key: \"abortComponentLoad\",\n    value: function abortComponentLoad(as) {\n      if (this.clc) {\n        var e = new Error('Route Cancelled');\n        e.cancelled = true;\n        Router.events.emit('routeChangeError', e, as);\n        this.clc();\n        this.clc = null;\n      }\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(data) {\n      this.sub(data, this.components['/_app'].Component);\n    }\n  }], [{\n    key: \"_rewriteUrlForNextExport\",\n    value: function _rewriteUrlForNextExport(url) {\n      if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n        var rewriteUrlForNextExport = require('./rewrite-url-for-export').rewriteUrlForNextExport;\n        return rewriteUrlForNextExport(url);\n      } else {\n        return url;\n      }\n    }\n  }]);\n  return Router;\n}();\nexports[\"default\"] = Router;\nRouter.events = (0, _mitt[\"default\"])();","map":{"version":3,"sources":["../../../../next-server/lib/router/router.ts"],"names":["basePath","process","env","__NEXT_ROUTER_BASEPATH","addBasePath","path","indexOf","delBasePath","substr","length","toRoute","replace","prepareRoute","fetchNextData","pathname","query","isServerRender","cb","attempts","getResponse","__NEXT_DATA__","buildId","credentials","then","res","ok","status","Error","json","data","err","code","Router","route","asPath","components","sdc","sub","clc","pageLoader","_bps","events","_wrapApp","isSsr","isFallback","constructor","as","initialProps","App","wrapApp","Component","subscription","props","__N_SSG","__N_SSP","autoExport","changeState","window","addEventListener","onPopState","url","__NEXT_EXPORT_TRAILING_SLASH","rewriteUrlForNextExport","require","e","state","options","console","warn","update","mod","newData","Object","assign","notify","reload","location","back","history","push","change","method","_url","_as","Promise","resolve","reject","_h","ST","performance","mark","nextExport","abortComponentLoad","onlyAHashChange","emit","scrollToHash","protocol","urlIsNew","shallow","asPathname","routeRegex","routeMatch","missingParams","keys","groups","filter","param","join","getRouteInfo","routeInfo","error","cancelled","appComp","next","isPrerendered","getInitialProps","origGetInitialProps","set","cachedRouteInfo","handleError","loadErrorFail","href","fetchComponent","page","gipErr","isValidElementType","_getData","_getStaticData","_getServerData","beforePopState","oldUrlNoHash","oldHash","split","newUrlNoHash","newHash","hash","scrollTo","idEl","document","getElementById","scrollIntoView","nameEl","getElementsByName","prefetch","all","prefetchData","priority","cancel","componentResult","loadPage","fn","ctx","AppTree","router"],"mappings":"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","sourcesContent":["/* global __NEXT_DATA__ */\n// tslint:disable:no-console\nimport { ParsedUrlQuery } from 'querystring'\nimport { ComponentType } from 'react'\nimport { parse, UrlObject } from 'url'\nimport mitt, { MittEmitter } from '../mitt'\nimport {\n  AppContextType,\n  formatWithValidation,\n  getURL,\n  loadGetInitialProps,\n  NextPageContext,\n  ST,\n} from '../utils'\nimport { isDynamicRoute } from './utils/is-dynamic'\nimport { getRouteMatcher } from './utils/route-matcher'\nimport { getRouteRegex } from './utils/route-regex'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function addBasePath(path: string): string {\n  return path.indexOf(basePath) !== 0 ? basePath + path : path\n}\n\nexport function delBasePath(path: string): string {\n  return path.indexOf(basePath) === 0\n    ? path.substr(basePath.length) || '/'\n    : path\n}\n\nfunction toRoute(path: string): string {\n  return path.replace(/\\/$/, '') || '/'\n}\n\nconst prepareRoute = (path: string) =>\n  toRoute(!path || path === '/' ? '/index' : path)\n\ntype Url = UrlObject | string\n\ntype ComponentRes = { page: ComponentType; mod: any }\n\nexport type BaseRouter = {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n}\n\nexport type NextRouter = BaseRouter &\n  Pick<\n    Router,\n    | 'push'\n    | 'replace'\n    | 'reload'\n    | 'back'\n    | 'prefetch'\n    | 'beforePopState'\n    | 'events'\n    | 'isFallback'\n  >\n\nexport type PrefetchOptions = {\n  priority?: boolean\n}\n\ntype RouteInfo = {\n  Component: ComponentType\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n  props?: any\n  err?: Error\n  error?: any\n}\n\ntype Subscription = (data: RouteInfo, App?: ComponentType) => void\n\ntype BeforePopStateCallback = (state: any) => boolean\n\ntype ComponentLoadCancel = (() => void) | null\n\ntype HistoryMethod = 'replaceState' | 'pushState'\n\nfunction fetchNextData(\n  pathname: string,\n  query: ParsedUrlQuery | null,\n  isServerRender: boolean,\n  cb?: (...args: any) => any\n) {\n  let attempts = isServerRender ? 3 : 1\n  function getResponse(): Promise<any> {\n    return fetch(\n      formatWithValidation({\n        pathname: addBasePath(\n          // @ts-ignore __NEXT_DATA__\n          `/_next/data/${__NEXT_DATA__.buildId}${delBasePath(pathname)}.json`\n        ),\n        query,\n      }),\n      {\n        // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n        // Cookies may also be required for `getServerSideProps`.\n        //\n        // > `fetch` won’t send cookies, unless you set the credentials init\n        // > option.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n        //\n        // > For maximum browser compatibility when it comes to sending &\n        // > receiving cookies, always supply the `credentials: 'same-origin'`\n        // > option instead of relying on the default.\n        // https://github.com/github/fetch#caveats\n        credentials: 'same-origin',\n      }\n    ).then((res) => {\n      if (!res.ok) {\n        if (--attempts > 0 && res.status >= 500) {\n          return getResponse()\n        }\n        throw new Error(`Failed to load static props`)\n      }\n      return res.json()\n    })\n  }\n\n  return getResponse()\n    .then((data) => {\n      return cb ? cb(data) : data\n    })\n    .catch((err: Error) => {\n      // We should only trigger a server-side transition if this was caused\n      // on a client-side transition. Otherwise, we'd get into an infinite\n      // loop.\n      if (!isServerRender) {\n        ;(err as any).code = 'PAGE_LOAD_ERROR'\n      }\n      throw err\n    })\n}\n\nexport default class Router implements BaseRouter {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n\n  /**\n   * Map of all components loaded in `Router`\n   */\n  components: { [pathname: string]: RouteInfo }\n  // Static Data Cache\n  sdc: { [asPath: string]: object } = {}\n  sub: Subscription\n  clc: ComponentLoadCancel\n  pageLoader: any\n  _bps: BeforePopStateCallback | undefined\n  events: MittEmitter\n  _wrapApp: (App: ComponentType) => any\n  isSsr: boolean\n  isFallback: boolean\n\n  static events: MittEmitter = mitt()\n\n  constructor(\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    {\n      initialProps,\n      pageLoader,\n      App,\n      wrapApp,\n      Component,\n      err,\n      subscription,\n      isFallback,\n    }: {\n      subscription: Subscription\n      initialProps: any\n      pageLoader: any\n      Component: ComponentType\n      App: ComponentType\n      wrapApp: (App: ComponentType) => any\n      err?: Error\n      isFallback: boolean\n    }\n  ) {\n    // represents the current component key\n    this.route = toRoute(pathname)\n\n    // set up the component cache (by route keys)\n    this.components = {}\n    // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n    if (pathname !== '/_error') {\n      this.components[this.route] = {\n        Component,\n        props: initialProps,\n        err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP,\n      }\n    }\n\n    this.components['/_app'] = { Component: App }\n\n    // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    this.events = Router.events\n\n    this.pageLoader = pageLoader\n    this.pathname = pathname\n    this.query = query\n    // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n    this.asPath =\n      // @ts-ignore this is temporarily global (attached to window)\n      isDynamicRoute(pathname) && __NEXT_DATA__.autoExport ? pathname : as\n    this.basePath = basePath\n    this.sub = subscription\n    this.clc = null\n    this._wrapApp = wrapApp\n    // make sure to ignore extra popState in safari on navigating\n    // back from external site\n    this.isSsr = true\n\n    this.isFallback = isFallback\n\n    if (typeof window !== 'undefined') {\n      // make sure \"as\" doesn't start with double slashes or else it can\n      // throw an error as it's considered invalid\n      if (as.substr(0, 2) !== '//') {\n        // in order for `e.state` to work on the `onpopstate` event\n        // we have to register the initial route upon initialization\n        this.changeState(\n          'replaceState',\n          formatWithValidation({ pathname, query }),\n          as\n        )\n      }\n\n      window.addEventListener('popstate', this.onPopState)\n    }\n  }\n\n  // @deprecated backwards compatibility even though it's a private method.\n  static _rewriteUrlForNextExport(url: string): string {\n    if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n      const rewriteUrlForNextExport = require('./rewrite-url-for-export')\n        .rewriteUrlForNextExport\n      return rewriteUrlForNextExport(url)\n    } else {\n      return url\n    }\n  }\n\n  onPopState = (e: PopStateEvent): void => {\n    if (!e.state) {\n      // We get state as undefined for two reasons.\n      //  1. With older safari (< 8) and older chrome (< 34)\n      //  2. When the URL changed with #\n      //\n      // In the both cases, we don't need to proceed and change the route.\n      // (as it's already changed)\n      // But we can simply replace the state with the new changes.\n      // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n      // So, doing the following for (1) does no harm.\n      const { pathname, query } = this\n      this.changeState(\n        'replaceState',\n        formatWithValidation({ pathname, query }),\n        getURL()\n      )\n      return\n    }\n\n    // Make sure we don't re-render on initial load,\n    // can be caused by navigating back from an external site\n    if (\n      e.state &&\n      this.isSsr &&\n      e.state.as === this.asPath &&\n      parse(e.state.url).pathname === this.pathname\n    ) {\n      return\n    }\n\n    // If the downstream application returns falsy, return.\n    // They will then be responsible for handling the event.\n    if (this._bps && !this._bps(e.state)) {\n      return\n    }\n\n    const { url, as, options } = e.state\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof url === 'undefined' || typeof as === 'undefined') {\n        console.warn(\n          '`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty'\n        )\n      }\n    }\n    this.replace(url, as, options)\n  }\n\n  update(route: string, mod: any) {\n    const Component: ComponentType = mod.default || mod\n    const data = this.components[route]\n    if (!data) {\n      throw new Error(`Cannot update unavailable route: ${route}`)\n    }\n\n    const newData = Object.assign({}, data, {\n      Component,\n      __N_SSG: mod.__N_SSG,\n      __N_SSP: mod.__N_SSP,\n    })\n    this.components[route] = newData\n\n    // pages/_app.js updated\n    if (route === '/_app') {\n      this.notify(this.components[this.route])\n      return\n    }\n\n    if (route === this.route) {\n      this.notify(newData)\n    }\n  }\n\n  reload(): void {\n    window.location.reload()\n  }\n\n  /**\n   * Go back in history\n   */\n  back() {\n    window.history.back()\n  }\n\n  /**\n   * Performs a `pushState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  push(url: Url, as: Url = url, options = {}) {\n    return this.change('pushState', url, as, options)\n  }\n\n  /**\n   * Performs a `replaceState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  replace(url: Url, as: Url = url, options = {}) {\n    return this.change('replaceState', url, as, options)\n  }\n\n  change(\n    method: HistoryMethod,\n    _url: Url,\n    _as: Url,\n    options: any\n  ): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (!options._h) {\n        this.isSsr = false\n      }\n      // marking route changes as a navigation start entry\n      if (ST) {\n        performance.mark('routeChange')\n      }\n\n      // If url and as provided as an object representation,\n      // we'll format them into the string version here.\n      let url = typeof _url === 'object' ? formatWithValidation(_url) : _url\n      let as = typeof _as === 'object' ? formatWithValidation(_as) : _as\n\n      url = addBasePath(url)\n      as = addBasePath(as)\n\n      // Add the ending slash to the paths. So, we can serve the\n      // \"<page>/index.html\" directly for the SSR page.\n      if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n        const rewriteUrlForNextExport = require('./rewrite-url-for-export')\n          .rewriteUrlForNextExport\n        // @ts-ignore this is temporarily global (attached to window)\n        if (__NEXT_DATA__.nextExport) {\n          as = rewriteUrlForNextExport(as)\n        }\n      }\n\n      this.abortComponentLoad(as)\n\n      // If the url change is only related to a hash change\n      // We should not proceed. We should only change the state.\n\n      // WARNING: `_h` is an internal option for handing Next.js client-side\n      // hydration. Your app should _never_ use this property. It may change at\n      // any time without notice.\n      if (!options._h && this.onlyAHashChange(as)) {\n        this.asPath = as\n        Router.events.emit('hashChangeStart', as)\n        this.changeState(method, url, as, options)\n        this.scrollToHash(as)\n        Router.events.emit('hashChangeComplete', as)\n        return resolve(true)\n      }\n\n      const { pathname, query, protocol } = parse(url, true)\n\n      if (!pathname || protocol) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            `Invalid href passed to router: ${url} https://err.sh/zeit/next.js/invalid-href-passed`\n          )\n        }\n        return resolve(false)\n      }\n\n      // If asked to change the current URL we should reload the current page\n      // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n      // We also need to set the method = replaceState always\n      // as this should not go into the history (That's how browsers work)\n      // We should compare the new asPath to the current asPath, not the url\n      if (!this.urlIsNew(as)) {\n        method = 'replaceState'\n      }\n\n      const route = toRoute(pathname)\n      const { shallow = false } = options\n\n      if (isDynamicRoute(route)) {\n        const { pathname: asPathname } = parse(as)\n        const routeRegex = getRouteRegex(route)\n        const routeMatch = getRouteMatcher(routeRegex)(asPathname)\n        if (!routeMatch) {\n          const missingParams = Object.keys(routeRegex.groups).filter(\n            (param) => !query[param]\n          )\n\n          if (missingParams.length > 0) {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(\n                `Mismatching \\`as\\` and \\`href\\` failed to manually provide ` +\n                  `the params: ${missingParams.join(\n                    ', '\n                  )} in the \\`href\\`'s \\`query\\``\n              )\n            }\n\n            return reject(\n              new Error(\n                `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). ` +\n                  `Read more: https://err.sh/zeit/next.js/incompatible-href-as`\n              )\n            )\n          }\n        } else {\n          // Merge params into `query`, overwriting any specified in search\n          Object.assign(query, routeMatch)\n        }\n      }\n\n      Router.events.emit('routeChangeStart', as)\n\n      // If shallow is true and the route exists in the router cache we reuse the previous result\n      this.getRouteInfo(route, pathname, query, as, shallow).then(\n        (routeInfo) => {\n          const { error } = routeInfo\n\n          if (error && error.cancelled) {\n            return resolve(false)\n          }\n\n          Router.events.emit('beforeHistoryChange', as)\n          this.changeState(method, url, as, options)\n\n          if (process.env.NODE_ENV !== 'production') {\n            const appComp: any = this.components['/_app'].Component\n            ;(window as any).next.isPrerendered =\n              appComp.getInitialProps === appComp.origGetInitialProps &&\n              !(routeInfo.Component as any).getInitialProps\n          }\n\n          this.set(route, pathname, query, as, routeInfo)\n\n          if (error) {\n            Router.events.emit('routeChangeError', error, as)\n            throw error\n          }\n\n          Router.events.emit('routeChangeComplete', as)\n          return resolve(true)\n        },\n        reject\n      )\n    })\n  }\n\n  changeState(\n    method: HistoryMethod,\n    url: string,\n    as: string,\n    options = {}\n  ): void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof window.history === 'undefined') {\n        console.error(`Warning: window.history is not available.`)\n        return\n      }\n\n      if (typeof window.history[method] === 'undefined') {\n        console.error(`Warning: window.history.${method} is not available`)\n        return\n      }\n    }\n\n    if (method !== 'pushState' || getURL() !== as) {\n      window.history[method](\n        {\n          url,\n          as,\n          options,\n        },\n        // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n        '',\n        as\n      )\n    }\n  }\n\n  getRouteInfo(\n    route: string,\n    pathname: string,\n    query: any,\n    as: string,\n    shallow: boolean = false\n  ): Promise<RouteInfo> {\n    const cachedRouteInfo = this.components[route]\n\n    // If there is a shallow route transition possible\n    // If the route is already rendered on the screen.\n    if (shallow && cachedRouteInfo && this.route === route) {\n      return Promise.resolve(cachedRouteInfo)\n    }\n\n    const handleError = (\n      err: Error & { code: any; cancelled: boolean },\n      loadErrorFail?: boolean\n    ) => {\n      return new Promise((resolve) => {\n        if (err.code === 'PAGE_LOAD_ERROR' || loadErrorFail) {\n          // If we can't load the page it could be one of following reasons\n          //  1. Page doesn't exists\n          //  2. Page does exist in a different zone\n          //  3. Internal error while loading the page\n\n          // So, doing a hard reload is the proper way to deal with this.\n          window.location.href = as\n\n          // Changing the URL doesn't block executing the current code path.\n          // So, we need to mark it as a cancelled error and stop the routing logic.\n          err.cancelled = true\n          // @ts-ignore TODO: fix the control flow here\n          return resolve({ error: err })\n        }\n\n        if (err.cancelled) {\n          // @ts-ignore TODO: fix the control flow here\n          return resolve({ error: err })\n        }\n\n        resolve(\n          this.fetchComponent('/_error')\n            .then((res) => {\n              const { page: Component } = res\n              const routeInfo: RouteInfo = { Component, err }\n              return new Promise((resolve) => {\n                this.getInitialProps(Component, {\n                  err,\n                  pathname,\n                  query,\n                } as any).then(\n                  (props) => {\n                    routeInfo.props = props\n                    routeInfo.error = err\n                    resolve(routeInfo)\n                  },\n                  (gipErr) => {\n                    console.error(\n                      'Error in error page `getInitialProps`: ',\n                      gipErr\n                    )\n                    routeInfo.error = err\n                    routeInfo.props = {}\n                    resolve(routeInfo)\n                  }\n                )\n              }) as Promise<RouteInfo>\n            })\n            .catch((err) => handleError(err, true))\n        )\n      }) as Promise<RouteInfo>\n    }\n\n    return (new Promise((resolve, reject) => {\n      if (cachedRouteInfo) {\n        return resolve(cachedRouteInfo)\n      }\n\n      this.fetchComponent(route).then(\n        (res) =>\n          resolve({\n            Component: res.page,\n            __N_SSG: res.mod.__N_SSG,\n            __N_SSP: res.mod.__N_SSP,\n          }),\n        reject\n      )\n    }) as Promise<RouteInfo>)\n      .then((routeInfo: RouteInfo) => {\n        const { Component, __N_SSG, __N_SSP } = routeInfo\n\n        if (process.env.NODE_ENV !== 'production') {\n          const { isValidElementType } = require('react-is')\n          if (!isValidElementType(Component)) {\n            throw new Error(\n              `The default export is not a React Component in page: \"${pathname}\"`\n            )\n          }\n        }\n\n        return this._getData<RouteInfo>(() =>\n          __N_SSG\n            ? this._getStaticData(as)\n            : __N_SSP\n            ? this._getServerData(as)\n            : this.getInitialProps(\n                Component,\n                // we provide AppTree later so this needs to be `any`\n                {\n                  pathname,\n                  query,\n                  asPath: as,\n                } as any\n              )\n        ).then((props) => {\n          routeInfo.props = props\n          this.components[route] = routeInfo\n          return routeInfo\n        })\n      })\n      .catch(handleError)\n  }\n\n  set(\n    route: string,\n    pathname: string,\n    query: any,\n    as: string,\n    data: RouteInfo\n  ): void {\n    this.isFallback = false\n\n    this.route = route\n    this.pathname = pathname\n    this.query = query\n    this.asPath = as\n    this.notify(data)\n  }\n\n  /**\n   * Callback to execute before replacing router state\n   * @param cb callback to be executed\n   */\n  beforePopState(cb: BeforePopStateCallback) {\n    this._bps = cb\n  }\n\n  onlyAHashChange(as: string): boolean {\n    if (!this.asPath) return false\n    const [oldUrlNoHash, oldHash] = this.asPath.split('#')\n    const [newUrlNoHash, newHash] = as.split('#')\n\n    // Makes sure we scroll to the provided hash if the url/hash are the same\n    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n      return true\n    }\n\n    // If the urls are change, there's more than a hash change\n    if (oldUrlNoHash !== newUrlNoHash) {\n      return false\n    }\n\n    // If the hash has changed, then it's a hash only change.\n    // This check is necessary to handle both the enter and\n    // leave hash === '' cases. The identity case falls through\n    // and is treated as a next reload.\n    return oldHash !== newHash\n  }\n\n  scrollToHash(as: string): void {\n    const [, hash] = as.split('#')\n    // Scroll to top if the hash is just `#` with no value\n    if (hash === '') {\n      window.scrollTo(0, 0)\n      return\n    }\n\n    // First we check if the element by id is found\n    const idEl = document.getElementById(hash)\n    if (idEl) {\n      idEl.scrollIntoView()\n      return\n    }\n    // If there's no element with the id, we check the `name` property\n    // To mirror browsers\n    const nameEl = document.getElementsByName(hash)[0]\n    if (nameEl) {\n      nameEl.scrollIntoView()\n    }\n  }\n\n  urlIsNew(asPath: string): boolean {\n    return this.asPath !== asPath\n  }\n\n  /**\n   * Prefetch page code, you may wait for the data during page rendering.\n   * This feature only works in production!\n   * @param url the href of prefetched page\n   * @param asPath the as path of the prefetched page\n   */\n  prefetch(\n    url: string,\n    asPath: string = url,\n    options: PrefetchOptions = {}\n  ): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const { pathname, protocol } = parse(url)\n\n      if (!pathname || protocol) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            `Invalid href passed to router: ${url} https://err.sh/zeit/next.js/invalid-href-passed`\n          )\n        }\n        return\n      }\n\n      // Prefetch is not supported in development mode because it would trigger on-demand-entries\n      if (process.env.NODE_ENV !== 'production') {\n        return\n      }\n      const route = delBasePath(toRoute(pathname))\n      Promise.all([\n        this.pageLoader.prefetchData(url, delBasePath(asPath)),\n        this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route),\n      ]).then(() => resolve(), reject)\n    })\n  }\n\n  async fetchComponent(route: string): Promise<ComponentRes> {\n    let cancelled = false\n    const cancel = (this.clc = () => {\n      cancelled = true\n    })\n    route = delBasePath(route)\n\n    const componentResult = await this.pageLoader.loadPage(route)\n\n    if (cancelled) {\n      const error: any = new Error(\n        `Abort fetching component for route: \"${route}\"`\n      )\n      error.cancelled = true\n      throw error\n    }\n\n    if (cancel === this.clc) {\n      this.clc = null\n    }\n\n    return componentResult\n  }\n\n  _getData<T>(fn: () => Promise<T>): Promise<T> {\n    let cancelled = false\n    const cancel = () => {\n      cancelled = true\n    }\n    this.clc = cancel\n    return fn().then((data) => {\n      if (cancel === this.clc) {\n        this.clc = null\n      }\n\n      if (cancelled) {\n        const err: any = new Error('Loading initial props cancelled')\n        err.cancelled = true\n        throw err\n      }\n\n      return data\n    })\n  }\n\n  _getStaticData = (asPath: string): Promise<object> => {\n    const pathname = prepareRoute(parse(asPath).pathname!)\n\n    return process.env.NODE_ENV === 'production' && this.sdc[pathname]\n      ? Promise.resolve(this.sdc[pathname])\n      : fetchNextData(\n          pathname,\n          null,\n          this.isSsr,\n          (data) => (this.sdc[pathname] = data)\n        )\n  }\n\n  _getServerData = (asPath: string): Promise<object> => {\n    let { pathname, query } = parse(asPath, true)\n    pathname = prepareRoute(pathname!)\n    return fetchNextData(pathname, query, this.isSsr)\n  }\n\n  getInitialProps(\n    Component: ComponentType,\n    ctx: NextPageContext\n  ): Promise<any> {\n    const { Component: App } = this.components['/_app']\n    const AppTree = this._wrapApp(App)\n    ctx.AppTree = AppTree\n    return loadGetInitialProps<AppContextType<Router>>(App, {\n      AppTree,\n      Component,\n      router: this,\n      ctx,\n    })\n  }\n\n  abortComponentLoad(as: string): void {\n    if (this.clc) {\n      const e = new Error('Route Cancelled')\n      ;(e as any).cancelled = true\n      Router.events.emit('routeChangeError', e, as)\n      this.clc()\n      this.clc = null\n    }\n  }\n\n  notify(data: RouteInfo): void {\n    this.sub(data, this.components['/_app'].Component)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}